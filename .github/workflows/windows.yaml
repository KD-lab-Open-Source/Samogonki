name: Windows

on:
  push:
    branches: [ cmake ]
  pull_request:
    branches: [ cmake ]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: mingw build
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: >-
          base-devel
          git
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-nasm
          mingw-w64-x86_64-libjpeg-turbo
          unzip

    - name: SDL -- cache
      id: cache-sdl
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/3rdparty/SDL-2.26.5
        key: ${{ runner.os }}-sdl-2.26.5
    - name: SDL -- download
      if: steps.cache-sdl.outputs.cache-hit != 'true'
      run: git clone --depth 1 --branch release-2.26.5 https://github.com/libsdl-org/SDL.git SDL
    - name: SDL -- configure
      if: steps.cache-sdl.outputs.cache-hit != 'true'
      run: msys2 -c 'cmake -B cmake-build-debug -DSDL_SHARED=0 -DSDL_STATIC=1 -DSDL_TEST=0 -DCMAKE_INSTALL_PREFIX=target-debug'
      working-directory: SDL
    - name: SDL -- build and install
      if: steps.cache-sdl.outputs.cache-hit != 'true'
      run: |
        msys2 -c 'cmake --build cmake-build-debug --target install'
        mkdir -p ${{github.workspace}}/3rdparty/SDL-2.26.5
        cp -r target-debug/include ${{github.workspace}}/3rdparty/SDL-2.26.5/
        cp -r target-debug/lib ${{github.workspace}}/3rdparty/SDL-2.26.5/
      working-directory: SDL

    - name: ffmpeg -- cache
      id: cache-ffmpeg
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/3rdparty/FFmpeg-n4.3.6
        key: ${{ runner.os }}-ffmpeg-n4.3.6
    - name: ffmpeg -- download
      if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
      run: |
        git clone --depth 1 --branch n4.3.6 https://git.ffmpeg.org/ffmpeg.git ffmpeg
        cd ffmpeg
        git apply ${{github.workspace}}/avcodec-x86-mathops.patch
    - name: ffmpeg -- configure
      if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
      run: msys2 -c './configure
        --prefix=build
        --disable-programs
        --disable-doc
        --disable-avdevice
        --disable-avfilter
        --disable-network
        --disable-pixelutils
        --disable-everything
        --enable-decoder=pcm_s16le,mpc7
        --enable-demuxer=wav,mpc
        --enable-protocol=file'
      working-directory: ffmpeg
    - name: ffmpeg -- build and install
      if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
      run: |
        msys2 -c 'mingw32-make -j4'
        msys2 -c 'mingw32-make install'
        mkdir -p ${{github.workspace}}/3rdparty/FFmpeg-n4.3.6
        cp -r build/include ${{github.workspace}}/3rdparty/FFmpeg-n4.3.6/
        cp -r build/lib ${{github.workspace}}/3rdparty/FFmpeg-n4.3.6/
      working-directory: ffmpeg

    - shell: msys2 {0}
      run: |
        mkdir build-mingw
        cd build-mingw
        cmake -G "Unix Makefiles" ..
        make -j4
        cd ..
    - name: prepare release folder
      run: |
        msys2 -c 'cp /mingw64/bin/libiconv-2.dll build-mingw/MechoSoma/'
        msys2 -c 'cp /mingw64/bin/zlib1.dll build-mingw/MechoSoma/'
        msys2 -c 'cp /mingw64/bin/libgcc_s_seh-1.dll build-mingw/MechoSoma/'
    - name: publish artifact
      uses: actions/upload-artifact@v2
      with:
        name: Mechosoma
        path: |
          build-mingw/MechoSoma/moonshine-runners.exe
          build-mingw/MechoSoma/*.dll
